<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">
	<select id="userList" resultType="com.sh.Dto.UserDto">
		SELECT
			userId As userId ,
			userName As userName ,
			userPhone As userPhone ,
			userJoinDate As userJoinDate ,
			verify As verify
		FROM
			user
	</select>

	<select id="userInfo" resultType="com.sh.Dto.UserDto">
		SELECT
			userId As userId ,
			userName As userName ,
			userPhone As userPhone ,
			userJoinDate As userJoinDate ,
			Verify As Verify
		FROM
			user
		where 
			userId = #{userId}
	</select>

	<insert id="proRegister">
		insert 
			into product (bno , proCode , proName , proPrice , proStock , proDescription , proRegDate , proImg , proThumbnail)
		values 
			(#{bno}, #{proCode} , #{proName} , #{proPrice} , #{proStock} , #{proDescription} , #{proRegDate }, #{proImg} , #{proThumbnail})
	</insert>

	<select id="proList" resultType="com.sh.Dto.Product">
		SELECT
			bno As bno,
			proCode As proCode,
			proName As proName,
			proPrice As proPrice,
			proStock As proStock,
			proDescription As proDescription,
			proRegDate As proRegDate, 
			proImg As proImg,
			proThumbnail As proThumbnail
		FROM
			product
	</select>

	<select id="proView" parameterType="int" resultType="com.sh.Dto.Product">
		SELECT
			bno , proCode, proName, proPrice, proStock, proDescription, proImg, proThumbnail
		FROM
			product
		where
			bno = #{bno}
	</select>

	<update id="proUpdate" parameterType="com.sh.Dto.Product">
		update product set
			proCode =#{proCode},
			proName =#{proName},
			proPrice =#{proPrice},
			proDescription =#{proDescription}		
			proImg =#{proImg}
		where
			bno =#{bno}
	</update>

	<delete id="proDelete" parameterType="int">
		delete from product where
		bno = #{bno}
	</delete>
	
	<update id="minusProStock">
		update 
			product set proStock = proStock - #{orderStock} 
		where
			proCode = #{proCode}
	</update>
	
	<update id="plusProStock">
		update 
			product set proStock = proStock + #{orderStock}
		where 
			proCode = #{proCode};
	</update>

	<!--orderProName 대신 product.proName, 넣기  / -->
	<!-- orderInfo.orderProName , deliveryInfo  -->
	<select id="reqProList" resultType="hashmap">
		SELECT 
			user.userId As userId ,
			user.userName As userName, 
			user.address As address,
			orderId As orderId, 
			orderInfo.proCode As proCode, 
			orderInfo.orderProName	As orderProName,	
			orderStock As orderStock, 
			orderPrice As orderPrice,
			deliveryInfo As deliveryInfo
		FROM 
			portfolio.user 
		LEFT JOIN 
			portfolio.orderInfo on user.userId = orderInfo.userId
		WHERE 
			orderId is not null
	</select>	

	<delete id="DeleteOrderInfo">
		delete from 
			orderInfo 
		where 
			orderId =#{orderId}
		and
			userId =#{userId}
	</delete>	
</mapper>

